CUDA_HOME = /usr/local/cuda
R_HOME = /opt/rit/app/R/3.3.1/lib64/R
CXX = /usr/bin/g++

# This defines what the shared object libraries will be
PKG_LIBS= -L/usr/local/cuda-8.0/lib64 -Wl,-rpath,/usr/local/cuda-8.0/lib64 -lcudart -lcublas -lcurand -lcuda


#########################################

R_INC = /opt/rit/app/R/3.3.1/lib64/R/include
RCPP_INC = $(R_HOME)/library/Rcpp/include

NVCC = $(CUDA_HOME)/bin/nvcc
CUDA_INC = $(CUDA_HOME)/include
CUDA_LIB = $(CUDA_HOME)/lib64

LIBS = -lcudart -d
NVCC_FLAGS = -Xcompiler "-fPIC" -gencode arch=compute_35,code=sm_35 -I$(R_INC)

### Define objects
cu_sources := $(wildcard *cu)
cu_sharedlibs := $(patsubst %.cu, %.o,$(cu_sources))

cpp_sources := $(wildcard *.cpp)
cpp_sharedlibs := $(patsubst %.cpp, %.o, $(cpp_sources))

OBJECTS = $(cu_sharedlibs) $(cpp_sharedlibs)

all : RcppThrust.so

RcppThrust.so: $(OBJECTS)

%.o: %.cpp $(cpp_sources)
	$(CXX) $< -c -fPIC -I$(R_INC) -I$(RCPP_INC) -I$(CUDA_INC)

%.o: %.cu $(cu_sources)
	$(NVCC) $(NVCC_FLAGS) -I$(CUDA_INC) $< -c
